#!/usr/bin/env bash

unset SSH_ASKPASS
unset GIT_ASKPASS

ARG=${1}

LPASS=lpass

function log {
    if [[ "${ARG}" != "-q" ]]
    then
        echo ${@}
    fi
}

function start_ssh_agent {
    log "Initialising new SSH agent..."
    /usr/bin/ssh-agent | grep -v '^echo' > "${SSH_ENV}"
    log succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
}

function ensure_ssh_agent_started {
    if [ -f "${SSH_ENV}" ]; then
        . "${SSH_ENV}" > /dev/null
        ps -eo pid | grep -q ${SSH_AGENT_PID} && return
        rm -f "${SSH_ENV}"
    fi
    start_ssh_agent;
}

function ensure_ssh_key_added {
    export LPASS_SSH_KEY_ID=tjarvstrand
    PUB_KEY=$(${LPASS} show --field='Public Key' ssh/${LPASS_SSH_KEY_ID})
    FINGERPRINT=$(ssh-keygen -lf /dev/stdin <<<${PUB_KEY} | cut -d ' ' -f 2)
    if ssh-add -l | grep -q ${FINGERPRINT}
    then
        log id_rsa already added to agent
    else
        FIFO=$(mktemp -u --suffix=.${LPASS_SSH_KEY_ID})
        mkfifo -m 600 ${FIFO}
        trap "rm -rf ${FIFO}" EXIT
        ${LPASS} show --field='Private Key' ssh/${LPASS_SSH_KEY_ID} > ${FIFO} &
        SSH_ASKPASS=lpass-ssh-askpass
        log $(ssh-add ${FIFO} < /dev/null)
    fi
}

ensure_ssh_agent_started
ensure_ssh_key_added
exec $(non_bin_exec ssh) "$@"
